webpackJsonp([5],{595:function(t,n,o){var e=o(5),u=o(32),r=o(213).PageRenderer;r.__esModule&&(r=r.default);var s=u({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(602)}},componentWillMount:function(){},render:function(){return e.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});s.__catalog_loader__=!0,t.exports=s},602:function(t,n){t.exports='### Simple\n\nRender a simple button using the `<Button>` component.\n\n```react\nshowSource: true\n---\n<Button>Hello world</Button>\n```\n\n#### With a custom element\n\nButton by default is wrapped in a `<button>` element.\nBut you can change it to any type of element if you pass through\na `element` prop.\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button element="a">Anchor</Button>\n\t<Button element="input" type="submit" value="Submit button" />\n\t<Button element="input" type="reset" value="Reset button" />\n</Buttons>\n```\n\n### Colors\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="white">White</Button>\n\t<Button color="light">Light</Button>\n\t<Button color="dark">Dark</Button>\n\t<Button color="black">Black</Button>\n\t<Button color="text">Text</Button>\n</Buttons>\n```\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="primary">Primary</Button>\n\t<Button color="link">Link</Button>\n\t<Button color="info">Info</Button>\n\t<Button color="success">Success</Button>\n\t<Button color="warning">Warning</Button>\n\t<Button color="danger">Danger</Button>\n</Buttons>\n```\n\n### Sizes\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button size="small">Small</Button>\n\t<Button>Normal</Button>\n\t<Button size="medium">Medium</Button>\n\t<Button size="large">Large</Button>\n</Buttons>\n```\n\n### Styles\n\n#### Outlined\n\n```react\nshowSource: true\ndark: true\n---\n<Buttons>\n\t<Button isOutlined color="primary">Primary</Button>\n\t<Button isOutlined color="link">Link</Button>\n\t<Button isOutlined color="info">Info</Button>\n\t<Button isOutlined color="success">Success</Button>\n\t<Button isOutlined color="warning">Warning</Button>\n\t<Button isOutlined color="danger">Danger</Button>\n</Buttons>\n```\n\n#### Inverted\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button isInverted color="primary">Primary</Button>\n\t<Button isInverted color="link">Link</Button>\n\t<Button isInverted color="info">Info</Button>\n\t<Button isInverted color="success">Success</Button>\n\t<Button isInverted color="danger">Danger</Button>\n</Buttons>\n```\n\n#### Inverted outlined\n\n```react\nshowSource: true\ndark: true\n---\n<Buttons>\n\t<Button isInverted isOutlined color="primary">Primary</Button>\n\t<Button isInverted isOutlined color="link">Link</Button>\n\t<Button isInverted isOutlined color="info">Info</Button>\n\t<Button isInverted isOutlined color="success">Success</Button>\n\t<Button isInverted isOutlined color="danger">Danger</Button>\n</Buttons>\n```\n\n#### Rounded\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button isRounded color="primary">Primary</Button>\n\t<Button isRounded color="link">Link</Button>\n\t<Button isRounded color="info">Info</Button>\n\t<Button isRounded color="success">Success</Button>\n\t<Button isRounded color="warning">Warning</Button>\n\t<Button isRounded color="danger">Danger</Button>\n</Buttons>\n```\n\n### States\n\n#### Hover\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="primary" state="hovered">Primary</Button>\n\t<Button color="link" state="hovered">Link</Button>\n\t<Button color="info" state="hovered">Info</Button>\n\t<Button color="success" state="hovered">Success</Button>\n\t<Button color="warning" state="hovered">Warning</Button>\n\t<Button color="danger" state="hovered">Danger</Button>\n</Buttons>\n```\n\n#### Focus\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="primary" state="focused">Primary</Button>\n\t<Button color="link" state="focused">Link</Button>\n\t<Button color="info" state="focused">Info</Button>\n\t<Button color="success" state="focused">Success</Button>\n\t<Button color="warning" state="focused">Warning</Button>\n\t<Button color="danger" state="focused">Danger</Button>\n</Buttons>\n```\n\n#### Active\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="primary" state="active">Primary</Button>\n\t<Button color="link" state="active">Link</Button>\n\t<Button color="info" state="active">Info</Button>\n\t<Button color="success" state="active">Success</Button>\n\t<Button color="warning" state="active">Warning</Button>\n\t<Button color="danger" state="active">Danger</Button>\n</Buttons>\n```\n\n#### Loading\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="primary" isLoading>Primary</Button>\n\t<Button color="link" isLoading>Link</Button>\n\t<Button color="info" isLoading>Info</Button>\n\t<Button color="success" isLoading>Success</Button>\n\t<Button color="warning" isLoading>Warning</Button>\n\t<Button color="danger" isLoading>Danger</Button>\n</Buttons>\n```\n\n#### Static\n```react\nshowSource: true\n---\n<Button isStatic>Hello world</Button>\n```\n\n#### Disabled\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="primary" disabled>Primary</Button>\n\t<Button color="link" disabled>Link</Button>\n\t<Button color="info" disabled>Info</Button>\n\t<Button color="success" disabled>Success</Button>\n\t<Button color="warning" disabled>Warning</Button>\n\t<Button color="danger" disabled>Danger</Button>\n</Buttons>\n```\n\n### List of buttons\n\nYou can show a list of buttons using the `<Buttons>` component.\n\n```react\nshowSource: true\n---\n<Buttons>\n\t<Button color="info">Save changes</Button>\n\t<Button>Cancel</Button>\n</Buttons>\n```\n\n#### Addons\n\n```react\nshowSource: true\n---\n<Buttons hasAddons>\n\t<Button color="success" isSelected>Yes</Button>\n\t<Button>Maybe</Button>\n\t<Button>No</Button>\n</Buttons>\n```\n\n## Props\n\n```table\nrows:\n  - Prop: color\n    Type: \'string (optional)\'\n    Default value:\n    Description: \'Button color. Available values: `white`, `light`, `dark`, `black`, `text`, `primary`, `link`, `info`, `success`, `warning`, `danger`\'\n  - Prop: element\n    Type: \'string (optional)\'\n    Default value: \'`button`\'\n    Description: Button element type\n  - Prop: isInverted\n    Type: \'boolean (optional)\'\n    Default value: \'`false`\'\n    Description: Is button color inverted?\n  - Prop: isLoading\n    Type: \'boolean (optional)\'\n    Default value: \'`false`\'\n    Description: Is button loading?\n  - Prop: isOutlined\n    Type: \'boolean (optional)\'\n    Default value: \'`false`\'\n    Description: Is button outlined?\n  - Prop: isRounded\n    Type: \'boolean (optional)\'\n    Default value: \'`false`\'\n    Description: Is button round?\n  - Prop: isSelected\n    Type: \'boolean (optional)\'\n    Default value: \'`false`\'\n    Description: Is button selected?\n  - Prop: isStatic\n    Type: \'boolean (optional)\'\n    Default value: \'`false`\'\n    Description: Is button static?\n  - Prop: size\n    Type: \'string (optional)\'\n    Default value:\n    Description: \'Size of button. Available values: `small`, `medium`, `large`\'\n  - Prop: state\n    Type: \'string (optional)\'\n    Default value:\n    Description: \'State of button. Available values: `hovered`, `active`, `focused`\'\n```\n'}});
//# sourceMappingURL=5.943b095a.chunk.js.map