webpackJsonp([2],{598:function(n,e,o){var a=o(5),s=o(32),i=o(213).PageRenderer;i.__esModule&&(i=i.default);var c=s({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(605)}},componentWillMount:function(){},render:function(){return a.createElement(i,Object.assign({},this.props,{content:this.state.content}))}});c.__catalog_loader__=!0,n.exports=c},605:function(n,e){n.exports='### Simple\n\nRender an icon using the `<Icon>` component\n\n```react\nshowSource: true\n---\n<Icon iconClass="fas fa-home" />\n```\n\n### Colors\n\nUse the `color` prop to render icons with a color.\n\n```react\nshowSource: true\n---\n<div>\n  <Icon iconClass="fas fa-home" color="primary" />\n  <Icon iconClass="fas fa-home" color="info" />\n  <Icon iconClass="fas fa-home" color="success" />\n  <Icon iconClass="fas fa-home" color="warning" />\n  <Icon iconClass="fas fa-home" color="danger" />\n</div>\n```\n\n### Sizes\n\nYou can specify a custom size with the `size` prop. Available sizes are: `small`, `medium` and `large`.\n\nNote: This will alter the container size of the icon. To alter the actual icon size, use the icons size class name.\n\n```react\nshowSource: true\n---\n<div>\n  <Icon iconClass="fas fa-home" size="small" />\n  <Icon iconClass="fas fa-lg fa-home" />\n  <Icon iconClass="fas fa-2x fa-home" size="medium" />\n  <Icon iconClass="fas fa-3x fa-home" size="large" />\n</div>\n```\n\n## Props\n\n```table\nrows:\n  - Prop: iconClass\n    Type: \'string\'\n    Default value:\n    Description: \'Icon class name. Example (Font Awesome 5): `fa fa-home`\'\n  - Prop: color\n    Type: \'string (optional)\'\n    Default value:\n    Description: \'Color of the icon. Available values: `white`, `light`, `dark`, `black`, `text`, `primary`, `link`, `info`, `success`, `warning`, `danger`\'\n  - Prop: size\n    Type: \'string\'\n    Default value:\n    Description: \'Size of the icon. Available values: `small`, `medium`, `large`\'\n```\n'}});
//# sourceMappingURL=2.80dc8420.chunk.js.map